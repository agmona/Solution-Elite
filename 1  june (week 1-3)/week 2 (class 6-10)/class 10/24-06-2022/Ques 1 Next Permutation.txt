class Solution {
    public void nextPermutation(int[] nums) {
        int n = nums.length;
        int idx =-1;
        for (int i = n-1; i > 0; i--){
            if(nums[i]>nums[i-1]){
                idx = (i-1);
                break;
            }  
        }
        // for decreasing order array
        if(idx==-1){
        int i = 0, j = nums.length - 1;
        while (i < j) {
            swap(nums, i, j);
            i++;
            j--;
            }
            return;
    }
        
        // int j = n-1;
        int i;
        
        for (i=n-1; i>idx; i--){
            if(nums[i]>nums[idx]){
                // j=i;
                break;
            }
        }
        swap(nums, idx, i);
        idx=idx+1;
        int right = n-1;
        while(idx<right){
            swap(nums, idx, right);
                idx++;
            right--;
        }
        
}
    public void swap(int [] nums, int i, int j){
        int temp = nums[i];
       nums[i] = nums[j];
        nums[j] = temp;
    }
}


https://leetcode.com/problems/next-permutation/submissions/